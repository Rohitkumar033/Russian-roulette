<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PmQSLB//2Q==
</value>
  </data>
</root>